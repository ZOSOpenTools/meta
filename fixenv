/* rexx - must start in column 1 */

  arg parm

  /* ------------------------------------------------------- *
  | This rexx code should be run on your OMVS session after |
  | 1. installing the z/OS Open Tools (zot)                 |
  | 2. before invoking the zot .bootenv to setup the        |
  |    environment                                          |
  | 3. execute this rexx code with a parm of 1              |
  |    - this will capture the current environment          |
  | 4. execute the zot .bootenv to update the active        |
  |    environment                                          |
  | 5. execute this rexx code with a parm of 2              |
  |    - this will generate                                 |
  |      - a file to be added to /etc/profile or user       |
  |        .profile                                         |
  |      - an env file that can be used by zigi             |
  | 6. Enjoy the results                                    |
  * ------------------------------------------------------- */

  if parm = '' then call no_parm
  if pos(parm,'12') = 0 then call no_parm

  /* ---------------------------------------------- *
  | Default file names - to be updated by the user |
  | prior to running.                              |
  |                                                |
  | prefile - file name generated from parm 1 use  |
  | newfile - file name generated by this exec     |
  |           that can be copied into /etc/profile |
  |           or the users /~/.profile             |
  | envfile - file that can be used by ZIGI if the |
  |           /etc/profile or ~/.profile does not  |
  |           reference git and tools              |
  * ---------------------------------------------- */
  x = bpxwunix('pwd',,s.,e.)
  pwd = s.1
  prefile  = pwd'/bootpre.env'
  newfile  = pwd'/bootnew.profile'
  envfile  = pwd'/bootnew.env'
  newkeys.0 = 0
  envkeys.0 = 0

 /* ----------------------------------------------------- *
 | If parm 1 capture the current environment and save it |
 * ----------------------------------------------------- */
if parm = 1 then do
   say ' '
   say 'Reading the active environment variables.'
   x = bpxwunix('env',,env.,bad.)
   say 'Active Enviornment Variables found:' env.0
   Address syscall "writefile (prefile) 777 env."
   say ' '
   say 'Now execute the z/OS Open Tools .bootenv'
   say ' '
   say 'Then rerun this command with a parm of 2'
   say ' '
   Exit 0
  end

  /* --------------------------------------------------------- *
  | Get the current (hopefully updated) Environment Variables |
  * --------------------------------------------------------- */
  say ' '
  say 'Reading the current/.bootenv environment variables.'
  x = bpxwunix('env',,env.,bad.)
  say '.bootenv updated Enviornment Variables found:' env.0

  say ' '
  say 'Reading the original environment variables from' prefile
  call syscalls 'ON'
  address syscall 'readfile' prefile 'pre.'
  say ' '
  say 'Original Enviornment Variables found:' pre.0

  ignore = 'LOGNAME MAIL PS1 SHELL SSH_CLIENT SSH_CONNECTION SSH_TTY USER'
  do i = 1 to pre.0
    parse value pre.i with key'='keyvalue
    if left(key,1) = '_' then iterate
    if wordpos(key,ignore) > 0 then iterate
    prkeys.0 = prkeys.0 key
    prkeys.key = keyvalue
  end

  /* --------------------------------------- *
   | Find git home and use base for zot home |
   * --------------------------------------- */
  do i = 1 to env.0
    parse value env.i with key'='keyvalue
    if key /= 'GIT_HOME' then iterate
    parse value keyvalue with gh'/git'.
    gh_len = length(gh)
  end

/* -------------------- *
 | Begin our processing |
 * -------------------- */
  nk = 1
  newkeys.1 = 'export ZOT_HOME="'gh'"'
  envkeys.1 = newkeys.1

/* ------------------------ *
 | Find new or changed keys |
 * ------------------------ */
  do i = 1 to env.0
    parse value env.i with key'='keyvalue
    if left(key,1) = '_' then iterate
    if wordpos(key,ignore) > 0 then iterate
    if prkeys.key = keyvalue then iterate /* ignore the same */
    call add_key
  end

  if newkeys.0 = 0 then do
    say ' '
    say 'No new keys found - did you really update the enviornment variables with the z/OS Open' ,
      'Tools .bootenv before running this exec?'
    exit 8
  end

  call syscalls 'OFF'
  Address syscall "writefile (newfile) 777 newkeys."
  Address syscall "writefile (envfile) 777 envkeys."

  say ' '
  say newfile 'created which can be added to your /etc/profile or your' pwd'/.profile.'
  say envfile 'created which can be used as the local environemnt file for use with ZIGI.'
  say ' '

  /* ----------------------------- *
  | Fix the character set mapping |
  * ----------------------------- */
  cmd = 'chtag -tc 1047' newfile '&& chtag -tc 1047' envfile
  x = bpxwunix(cmd,,s.,e.)
  if e.0 > 0 then do i = 1 to e.0
    say e.0
  end

  exit

  /* ----------------------------------------------- *
  | Routine to add the key to the appropriate stems |
  * ----------------------------------------------- */
/* ---------------- *
 | Fix this Routine |
 * ---------------- */
Add_Key:
  add_var = 0
  if prkeys.key /= keyvalue then
  do forever
    if pos(gh,env.i) > 0 then do
      lpost = left(env.i,pos(gh,env.i)-1)
      rpost = substr(env.i,pos(gh,env.i)+gh_len+1)
      env.i = lpost'${ZOT_HOME}/'rpost
      add_var = 1
    end
    else leave
  end
  nk = nk + 1
  if add_var = 0
     then newenv = env.i
  else do
    parse value prkeys.key with tkey':'
    p = pos(tkey,env.i)
    if p = 0 then do
       newenv = env.i
       end
    else do
         newenv = left(env.i,p-2)
         newenv = newenv':$'key
         end
    end
  newkeys.nk = 'export "'newenv'"'
  envkeys.nk = newenv
  newkeys.0 = nk
  envkeys.0 = nk
  return

No_Parm:
   last = sourceline()
   do i = 1 to last
      line = strip(sourceline(i))
      if left(line,4) = '/* -' then do
         hit = 1
         say copies('-',70)
         iterate
         end
      if hit /= 1 then iterate
      if right(line,4) = '- */' then do
         say copies('-',70)
         exit 0
         end
      line = translate(line,' ','|')
      say line
      end
